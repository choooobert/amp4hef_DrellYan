module amp4hef_aux
  use amp4hef_qomentum
  implicit none
  private
  public :: unity ,Ncolor ,NcolDof ,factorial ,twoPower ,helTable ,perTable

  integer,parameter :: unity(0:NsizeProc)=&
                       [0,1,2,3,4,5,6,7,8,9,10,11,12]

  integer,parameter :: Ncolor(0:NsizeProc)=&
                       [1,3,9,27,81,243,729,2187,6561,19683,59049,177147,531441]

  integer,parameter :: NcolDof(-NsizeFlavor:NsizeFlavor)=&
                       [3,3,3,8,3,3,3]

  integer,parameter :: factorial(0:NsizeProc)=&
                       [1,1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600]

  integer,parameter :: twoPower(0:NsizeProc)=&
                       [1,2,4,8,16,32,64,128,256,512,1024,2048,4096]

  integer,parameter :: helTable(7,64)=reshape( &
    [-1,-1,-1,-1,-1,-1,-1  , 1,-1,-1,-1,-1,-1,-1  ,-1, 1,-1,-1,-1,-1,-1  , 1, 1,-1,-1,-1,-1,-1 &
    ,-1,-1, 1,-1,-1,-1,-1  , 1,-1, 1,-1,-1,-1,-1  ,-1, 1, 1,-1,-1,-1,-1  , 1, 1, 1,-1,-1,-1,-1 &
    ,-1,-1,-1, 1,-1,-1,-1  , 1,-1,-1, 1,-1,-1,-1  ,-1, 1,-1, 1,-1,-1,-1  , 1, 1,-1, 1,-1,-1,-1 &
    ,-1,-1, 1, 1,-1,-1,-1  , 1,-1, 1, 1,-1,-1,-1  ,-1, 1, 1, 1,-1,-1,-1  , 1, 1, 1, 1,-1,-1,-1 &
    ,-1,-1,-1,-1, 1,-1,-1  , 1,-1,-1,-1, 1,-1,-1  ,-1, 1,-1,-1, 1,-1,-1  , 1, 1,-1,-1, 1,-1,-1 &
    ,-1,-1, 1,-1, 1,-1,-1  , 1,-1, 1,-1, 1,-1,-1  ,-1, 1, 1,-1, 1,-1,-1  , 1, 1, 1,-1, 1,-1,-1 &
    ,-1,-1,-1, 1, 1,-1,-1  , 1,-1,-1, 1, 1,-1,-1  ,-1, 1,-1, 1, 1,-1,-1  , 1, 1,-1, 1, 1,-1,-1 &
    ,-1,-1, 1, 1, 1,-1,-1  , 1,-1, 1, 1, 1,-1,-1  ,-1, 1, 1, 1, 1,-1,-1  , 1, 1, 1, 1, 1,-1,-1 &
    ,-1,-1,-1,-1,-1, 1,-1  , 1,-1,-1,-1,-1, 1,-1  ,-1, 1,-1,-1,-1, 1,-1  , 1, 1,-1,-1,-1, 1,-1 &
    ,-1,-1, 1,-1,-1, 1,-1  , 1,-1, 1,-1,-1, 1,-1  ,-1, 1, 1,-1,-1, 1,-1  , 1, 1, 1,-1,-1, 1,-1 &
    ,-1,-1,-1, 1,-1, 1,-1  , 1,-1,-1, 1,-1, 1,-1  ,-1, 1,-1, 1,-1, 1,-1  , 1, 1,-1, 1,-1, 1,-1 &
    ,-1,-1, 1, 1,-1, 1,-1  , 1,-1, 1, 1,-1, 1,-1  ,-1, 1, 1, 1,-1, 1,-1  , 1, 1, 1, 1,-1, 1,-1 &
    ,-1,-1,-1,-1, 1, 1,-1  , 1,-1,-1,-1, 1, 1,-1  ,-1, 1,-1,-1, 1, 1,-1  , 1, 1,-1,-1, 1, 1,-1 &
    ,-1,-1, 1,-1, 1, 1,-1  , 1,-1, 1,-1, 1, 1,-1  ,-1, 1, 1,-1, 1, 1,-1  , 1, 1, 1,-1, 1, 1,-1 &
    ,-1,-1,-1, 1, 1, 1,-1  , 1,-1,-1, 1, 1, 1,-1  ,-1, 1,-1, 1, 1, 1,-1  , 1, 1,-1, 1, 1, 1,-1 &
    ,-1,-1, 1, 1, 1, 1,-1  , 1,-1, 1, 1, 1, 1,-1  ,-1, 1, 1, 1, 1, 1,-1  , 1, 1, 1, 1, 1, 1,-1]&
    , [7,64] )

  integer,parameter :: perTable(5,120)=reshape( &
    [1,2,3,4,5 ,2,1,3,4,5 ,2,3,1,4,5 ,3,2,1,4,5 ,3,1,2,4,5 ,1,3,2,4,5 &
    ,2,3,4,1,5 ,3,2,4,1,5 ,3,4,2,1,5 ,4,3,2,1,5 ,4,2,3,1,5 ,2,4,3,1,5 &
    ,3,4,1,2,5 ,4,3,1,2,5 ,4,1,3,2,5 ,1,4,3,2,5 ,1,3,4,2,5 ,3,1,4,2,5 &
    ,4,1,2,3,5 ,1,4,2,3,5 ,1,2,4,3,5 ,2,1,4,3,5 ,2,4,1,3,5 ,4,2,1,3,5 &
    ,2,3,4,5,1 ,3,2,4,5,1 ,3,4,2,5,1 ,4,3,2,5,1 ,4,2,3,5,1 ,2,4,3,5,1 &
    ,3,4,5,2,1 ,4,3,5,2,1 ,4,5,3,2,1 ,5,4,3,2,1 ,5,3,4,2,1 ,3,5,4,2,1 &
    ,4,5,2,3,1 ,5,4,2,3,1 ,5,2,4,3,1 ,2,5,4,3,1 ,2,4,5,3,1 ,4,2,5,3,1 &
    ,5,2,3,4,1 ,2,5,3,4,1 ,2,3,5,4,1 ,3,2,5,4,1 ,3,5,2,4,1 ,5,3,2,4,1 &
    ,3,4,5,1,2 ,4,3,5,1,2 ,4,5,3,1,2 ,5,4,3,1,2 ,5,3,4,1,2 ,3,5,4,1,2 &
    ,4,5,1,3,2 ,5,4,1,3,2 ,5,1,4,3,2 ,1,5,4,3,2 ,1,4,5,3,2 ,4,1,5,3,2 &
    ,5,1,3,4,2 ,1,5,3,4,2 ,1,3,5,4,2 ,3,1,5,4,2 ,3,5,1,4,2 ,5,3,1,4,2 &
    ,1,3,4,5,2 ,3,1,4,5,2 ,3,4,1,5,2 ,4,3,1,5,2 ,4,1,3,5,2 ,1,4,3,5,2 &
    ,4,5,1,2,3 ,5,4,1,2,3 ,5,1,4,2,3 ,1,5,4,2,3 ,1,4,5,2,3 ,4,1,5,2,3 &
    ,5,1,2,4,3 ,1,5,2,4,3 ,1,2,5,4,3 ,2,1,5,4,3 ,2,5,1,4,3 ,5,2,1,4,3 &
    ,1,2,4,5,3 ,2,1,4,5,3 ,2,4,1,5,3 ,4,2,1,5,3 ,4,1,2,5,3 ,1,4,2,5,3 &
    ,2,4,5,1,3 ,4,2,5,1,3 ,4,5,2,1,3 ,5,4,2,1,3 ,5,2,4,1,3 ,2,5,4,1,3 &
    ,5,1,2,3,4 ,1,5,2,3,4 ,1,2,5,3,4 ,2,1,5,3,4 ,2,5,1,3,4 ,5,2,1,3,4 &
    ,1,2,3,5,4 ,2,1,3,5,4 ,2,3,1,5,4 ,3,2,1,5,4 ,3,1,2,5,4 ,1,3,2,5,4 &
    ,2,3,5,1,4 ,3,2,5,1,4 ,3,5,2,1,4 ,5,3,2,1,4 ,5,2,3,1,4 ,2,5,3,1,4 &
    ,3,5,1,2,4 ,5,3,1,2,4 ,5,1,3,2,4 ,1,5,3,2,4 ,1,3,5,2,4 ,3,1,5,2,4] &
    , [5,120] )


end module


